#_____________________________________________________
# 
# ▗▖   ▗▄▄▄▖▗▄▄▖ ▗▄▄▖  ▗▄▖ ▗▄▄▖ ▗▄▄▄▖▗▄▄▄▖ ▗▄▄▖
# ▐▌     █  ▐▌ ▐▌▐▌ ▐▌▐▌ ▐▌▐▌ ▐▌  █  ▐▌   ▐▌   
# ▐▌     █  ▐▛▀▚▖▐▛▀▚▖▐▛▀▜▌▐▛▀▚▖  █  ▐▛▀▀▘ ▝▀▚▖
# ▐▙▄▄▖▗▄█▄▖▐▙▄▞▘▐▌ ▐▌▐▌ ▐▌▐▌ ▐▌▗▄█▄▖▐▙▄▄▖▗▄▄▞▘
# 
#_____________________________________________________

library(ggtern)
library(dplyr)
library(ggplot2)
library(ltc)

pokemon_df


alger <- ltc("alger") #in this case you select alger
str(alger)

# Specify axis columns and other settings
data <- pokemon_df
axis1_str <- "hp"
axis2_str <- "attack"
axis3_str <- "defense"
size_by <- "total"
label_extremes <- TRUE
point_alpha <- 0.5

# Define region colors
region_colors <- setNames(
  c("#1A5B5B", "#F4AB5C", "#D1422F"),
  c(axis1_str, axis2_str, axis3_str)
)

# Prepare data
df <- data %>%
  filter(if_all(all_of(c(axis1_str, axis2_str, axis3_str, "type_1")), ~ !is.na(.))) %>%
  mutate(
    total = .data[[axis1_str]] + .data[[axis2_str]] + .data[[axis3_str]],
    x = .data[[axis1_str]] / total,
    y = .data[[axis2_str]] / total,
    z = .data[[axis3_str]] / total,
    dominant_stat = case_when(
      x >= y & x >= z ~ axis1_str,
      y >= x & y >= z ~ axis2_str,
      z >= x & z >= y ~ axis3_str
    )
  )

# Trapezoid regions (3 equal pizza slices)
A <- c(1, 0, 0); B <- c(0, 1, 0); C <- c(0, 0, 1)
AB_mid <- c(0.5, 0.5, 0); BC_mid <- c(0, 0.5, 0.5); AC_mid <- c(0.5, 0, 0.5)
center <- c(1/3, 1/3, 1/3)

region1 <- as.data.frame(rbind(A, AB_mid, center, AC_mid))
region2 <- as.data.frame(rbind(B, BC_mid, center, AB_mid))
region3 <- as.data.frame(rbind(C, AC_mid, center, BC_mid))
colnames(region1) <- colnames(region2) <- colnames(region3) <- c("x", "y", "z")

# Prepare aes
point_aes <- aes(x = x, y = y, z = z, color = dominant_stat)
if (!is.null(size_by)) {
  point_aes <- modifyList(point_aes, aes_string(size = size_by))
}

# Build the plot
p <- ggtern() +
  geom_polygon(data = region1, aes(x = x, y = y, z = z),
               fill = region_colors[[axis1_str]], alpha = 0.25, inherit.aes = FALSE) +
  geom_polygon(data = region2, aes(x = x, y = y, z = z),
               fill = region_colors[[axis2_str]], alpha = 0.25, inherit.aes = FALSE) +
  geom_polygon(data = region3, aes(x = x, y = y, z = z),
               fill = region_colors[[axis3_str]], alpha = 0.25, inherit.aes = FALSE) +
  geom_point(data = df, mapping = point_aes, alpha = point_alpha) +
  scale_color_manual(values = region_colors, name = "Dominant Stat") +
  theme_bw() +
  labs(
    title = "Pokémon Ternary Plot",
    subtitle = paste(axis1_str, "vs", axis2_str, "vs", axis3_str),
    T = axis1_str, L = axis2_str, R = axis3_str
  ) +
  theme_hidegrid_minor() +
  theme(
    plot.title = element_text(hjust = 0.5, size = 16, face = "bold"),
    plot.subtitle = element_text(hjust = 0.5),
    legend.position = "none", 
    text = element_text(family="Avenir")
  )

# Add extreme labels if desired
if (label_extremes) {
  extreme1 <- df[which.max(df[[axis1_str]]), ]
  extreme2 <- df[which.max(df[[axis2_str]]), ]
  extreme3 <- df[which.max(df[[axis3_str]]), ]
  extremes <- bind_rows(extreme1, extreme2, extreme3) %>%
    distinct(pokemon, .keep_all = TRUE)
  
  p <- p + geom_text(data = extremes, aes(x = x, y = y, z = z, label = pokemon),
                     color = "black", size = 3, vjust = -1)
}

# Print the plot
p

